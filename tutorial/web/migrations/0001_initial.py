# Generated by Django 3.1.1 on 2020-09-22 07:46

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import web.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='LogMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=300)),
                ('log_date', models.DateTimeField(verbose_name='date logged')),
            ],
        ),
        migrations.CreateModel(
            name='WebUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'すでに同じユーザーがいます'}, help_text='25文字以下で', max_length=25, unique=True, verbose_name='username')),
                ('webid', models.CharField(error_messages={'unique': 'すでに同じidがいます'}, help_text='25文字以下で', max_length=25, verbose_name='userid')),
                ('email', models.EmailField(error_messages={'unique': 'exist same user'}, help_text='25文字以下', max_length=25, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='email')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('deleted', models.BooleanField(default=0, verbose_name='削除フラグ')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'webuser',
                'verbose_name_plural': 'webusers',
                'db_table': 'webuser',
            },
            managers=[
                ('objects', web.models.WebUserManager()),
            ],
        ),
    ]
